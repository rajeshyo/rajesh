{
  "_from": "mongoose-error",
  "_id": "mongoose-error@1.0.1",
  "_inBundle": false,
  "_integrity": "sha1-1bFzE2ZcCKQt3yraMJL2farfRG4=",
  "_location": "/mongoose-error",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "mongoose-error",
    "fetchSpec": "latest",
    "name": "mongoose-error",
    "raw": "mongoose-error",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/mongoose-error/-/mongoose-error-1.0.1.tgz",
  "_shasum": "d5b17313665c08a42ddf2ada3092f67daadf446e",
  "_spec": "mongoose-error",
  "_where": "C:\\Users\\Rajesh Saha\\Desktop\\appapi",
  "author": {
    "email": "contact@gitbook.com",
    "name": "GitBook Team"
  },
  "bugs": {
    "url": "https://github.com/GitbookIO/mongoose-error/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Johan Preynat",
      "email": "johan@gitbook.com"
    }
  ],
  "dependencies": {
    "http-errors": "^1.5.0",
    "mongo-errors": "^1.0.1"
  },
  "deprecated": false,
  "description": "Small Node.js utility to normalize and handle mongoose errors",
  "devDependencies": {
    "eslint": "^3.4.0",
    "eslint-config-gitbook": "^1.5.0",
    "expect": "^1.20.2",
    "mocha": "^3.2.0",
    "mongodb-core": "^2.1.7",
    "mongoose": "^4.8.1"
  },
  "homepage": "https://github.com/GitbookIO/mongoose-error",
  "keywords": [
    "error",
    "mongoose"
  ],
  "license": "Apache-2.0",
  "main": "index.js",
  "name": "mongoose-error",
  "optionalDependencies": {},
  "peerDependencies": {
    "mongodb-core": "*",
    "mongoose": "*"
  },
  "readme": "# mongoose-error\n\n[![NPM version](https://badge.fury.io/js/mongoose-error.svg)](http://badge.fury.io/js/mongoose-error)\n[![Linux Build Status](https://travis-ci.org/GitbookIO/mongoose-error.svg?branch=master)](https://travis-ci.org/GitbookIO/mongoose-error)\n\nSmall Node.js utility to normalize mongoose errors.\n\n### Installation\n\n```\n$ npm install mongoose-error --save\n```\n\n### Usage\n\n`mongoose-error` normalize the error message to include the first validation error, and can also catch mongo duplicate key.\n\n```js\nconst mongooseError = require('mongoose-error');\n\nuser.save()\n.then(\n    () => {\n        console.log('saved!');\n    },\n    (err) => {\n        throw mongooseError(err, {\n            DuplicateKey: 'An user with this username already exist'\n        });\n    }\n);\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/GitbookIO/mongoose-error.git"
  },
  "scripts": {
    "test": "mocha ./test.js"
  },
  "version": "1.0.1"
}
